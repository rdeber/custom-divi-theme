////////////////////////////////////////
// RL-Process Section Styles. /////////
//////////////////////////////////////
/*
.rl-process {
    text-align: left;
    position: relative;
    display: flex;
    flex-direction: row;
    margin: 2rem auto;
    width: 100%;

    .rl-process-text {
        display: flex;
        flex-direction: column;
    }

    @include breakpoint(tablet) {
        max-width: 500px;
    }

    @include breakpoint(laptop) {
        padding: 1rem;
        text-align: center;
        display: block;
        margin: 0;
        max-width: 100%;

        .rl-process-text {
            display: block;
        }

        &:before {
            content: "";
            display: block;
            background: transparent url('/wp-content/themes/rl-divi/images/svg/rl-process-arrow.svg') no-repeat center center;
            width: 25px;
            height: 200px;
            position: absolute;
            top: 33%;
            left: 10%;
        }
    }

    &-1 {
        grid-area: process-1;

        .svg-inline--fa {
            color: $rl-blue;
        }
    }
    &-2 {
        grid-area: process-2;
        &:before {
            transform: scaleX(-1);
            filter: FlipH;
            -ms-filter: "FlipH";
            left: auto;
            right: 15%;
        }
        .svg-inline--fa {
            color: $rl-teal;
        }
    }
    &-3 {
        grid-area: process-3;
        .svg-inline--fa {
            color: $rl-orange;
        }
    }
    &-4 {
        grid-area: process-4;
        &:before {
            top: 10%;
            left: auto;
            right: 20%;
            transform: rotate(245deg);
        }
        .svg-inline--fa {
            color: $rl-purple;
        }
    }
    &-5 {
        grid-area: process-5;
        &:before {
            top: -10%;
            left: auto;
            right: 10%;
            transform: rotate(245deg) scaleX(-1);
        }
        .svg-inline--fa {
            color: $rl-yellow;
        }
    }
    &-6 {
        grid-area: process-6;
        &:before {
            top: -20%;
            left: auto;
            right: 20%;
            transform: rotate(175deg);
        }
        .svg-inline--fa {
            color: $rl-teal;
        }
    }
    &-7 {
        grid-area: process-7;
        &:before {
            top: -50%;
            left: 20%;
            transform: scaleX(-1) rotate(-195deg);
            filter: FlipH;
            -ms-filter: "FlipH";
        }
        .svg-inline--fa {
            color: $rl-orange;
        }
    }
    &-8 {
        grid-area: process-8;
        &:before {
            top: -25%;
            left: auto;
            right: 25%;
            transform: rotate(170deg);
        }
        .svg-inline--fa {
            color: $rl-purple;
        }
    }
    &-9 {
        grid-area: process-9;
        &:before {
            display: none;
        }
        .svg-inline--fa {
            color: $rl-blue;
        }
    }

    img {
        width: 75px;
        height: 75px;
    }

    .svg-inline--fa {
        font-size: 3rem;
    }

    h3 {
        font-size: 1.75rem;
        font-weight: bold;
    }

    h4 {
        font-family: 'Amatic SC', cursive;
        font-size: 1.5rem;
        font-weight: bold;
        margin-bottom: 0;
    }

    p {
        font-size: .85rem;
        @include breakpoint(laptop) {
            max-width: 300px;
            margin: auto;
        }
    }

    ul {
        display: none;
    }
}
*/



.rl-process-text.et_pb_fullwidth_section {
    padding-bottom: 0;
}

.rl-process-intro {
    display: flex;
    margin: 0 auto 4rem;
    max-width: 75vw;

    svg {
        width: 500px;
        height: auto;
        flex: 1 0 20%;
    }
    p {
        flex: 1 0 80%;
        padding-left: 2rem;
    }
}

.rl-process-wrap {
    display: flex;
    flex-direction: column;
    margin: auto;

    @include breakpoint(phablet) {
      max-width: 75vw;
    }
}

.rl-process {
    display: flex;
    margin-bottom: 2rem;

    @include breakpoint(phablet) {
      max-width: 600px;
    }

    .svg-inline--fa {
        font-size: 4rem;
    }

    .rl-process-text {
        display: flex;
        flex-direction: column;
    }

    h3 {
        font-family: 'Montserrat',Helvetica,Arial,Lucida,sans-serif;
        font-size: 1.75rem;
        font-weight: bold;
        margin: 0;
    }

    h4 {
        font-family: 'Amatic SC', cursive;
        font-size: 1.5rem;
        font-weight: bold;
        margin: 0;
    }

    &:nth-of-type(1) {
        align-self: flex-start;
    }
    &:nth-of-type(2) {
        align-self: center;
    }
    &:nth-of-type(3) {
        align-self: flex-end;
    }
    &:nth-of-type(4) {
        align-self: center;
    }
    &:nth-of-type(5) {
        align-self: flex-start;
    }
    &:nth-of-type(6) {
        align-self: center;
    }
    &:nth-of-type(7) {
        align-self: flex-end;
    }
    &:nth-of-type(8) {
        align-self: center;
    }
    &:nth-of-type(9) {
        align-self: flex-start;
    }
}

.rl-process-icons {
    position: relative;
    margin: 2rem 3rem 0;

    .svg-inline--fa:not(:first-child) {
        position: absolute;
        color: #fff;
        background: #aaa;
        border-radius: 50%;
        width: 2rem;
        height: 2rem;
        padding: .5rem;
    }
    .svg-inline--fa:nth-of-type(1) {
        font-size: 4rem;
        position: static;
    }
    .svg-inline--fa:nth-of-type(2) {
        transform: translateY(-95px)
                    translateX(-10px)
                    rotate(-12deg);
    }
    .svg-inline--fa:nth-of-type(3) {
        transform: translateY(-80px)
                    translateX(80px)
                    rotate(15deg);
    }
    .svg-inline--fa:nth-of-type(4) {
        transform: translateY(0)
                    translateX(80px)
                    rotate(15deg);
    }
    .svg-inline--fa:nth-of-type(5) {
        transform: translateY(0)
                    translateX(-20px)
                    rotate(-15deg);
    }

    .rl-process-dot {
        position: absolute;
        top: 0;
        left: 0;
        width: 10px;
        height: 10px;
        &:nth-of-type(6) {
            transform: translateY(-21px)
                       translateX(32px);
        }
        &:nth-of-type(7) {
            transform: translateY(-22px)
                       translateX(63px);
        }
        &:nth-of-type(8) {
            transform: translateY(26px)
                       translateX(93px);
        }
        &:nth-of-type(9) {
            transform: translateY(81px)
                       translateX(50px);
        }
        &:nth-of-type(10) {
            transform: translateY(76px)
                       translateX(18px);
        }
        &:nth-of-type(11) {
            transform: translateY(30px)
                       translateX(-22px);
        }
    }
}

// Animate the SVGs
.rl-process-intro {
    svg path {
        transform: translate(-10px,-10px);
        opacity: 0;
        transition: 250ms $ease-in;
        transform: translate(-10px,-10px);
        animation: animateDots 2s infinite alternate;
    }
}
// Transition delay iteration.
@for $i from 1 to 33 {
    .rl-process-intro svg path:nth-child(#{$i}) { animation-delay: $i * 100ms; }
}
@keyframes animateDots {
    0%   {transform: translate(-5px,-5px); opacity: 0;}
    100% {transform: translate(0); opacity: 1;}
}


// Do the arrows.
.rl-process {
    .rl-process-arrow {
      position: absolute;
      width: 30px;
      height: auto;
      transform: translate(75px, 51px) rotate(-36deg);
      path {fill: #ddd;}
    }
    &:nth-of-type(3) .rl-process-arrow,
    &:nth-of-type(7) .rl-process-arrow {
      transform: scaleX(-1) translate(-155px, 40px) rotate(-55deg);
      filter: FlipH;
      -ms-filter: "FlipH";
    }
    &:nth-of-type(4) .rl-process-arrow,
    &:nth-of-type(8) .rl-process-arrow {
      transform: translate(-121px, -62px) rotate(29deg);
    }
}

// Add colors.
.rl-process {
    &:nth-of-type(5n+1) {
        svg {
            fill: tint($rl-blue, 50%);
        }
        .svg-inline--fa:not(:first-child) {
            background: $rl-blue;
        }
    }
    &:nth-of-type(5n+2) {
        svg {
            fill: tint($rl-teal, 50%);
        }
        .svg-inline--fa:not(:first-child) {
            background: $rl-teal;
        }
    }
    &:nth-of-type(5n+3) {
        svg {
            fill: tint($rl-yellow, 50%);
        }
        .svg-inline--fa:not(:first-child) {
            background: $rl-yellow;
        }
    }
    &:nth-of-type(5n+4) {
        svg {
            fill: tint($rl-purple, 50%);
        }
        .svg-inline--fa:not(:first-child) {
            background: $rl-purple;
        }
    }
    &:nth-of-type(5n+5) {
        svg {
            fill: tint($rl-orange, 50%);
        }
        .svg-inline--fa:not(:first-child) {
            background: $rl-orange;
        }
    }


    //V2 stuff
    .rl-process-v2 & {
        .rl-process-icons {
            margin: 0;
        }
        .svg-inline--fa {
            color: #fff;
            border-radius: 50%;
            width: 6rem;
            height: 6rem;
            padding: 1rem;
            margin-right: 1rem;
        }
        // Colors.
        &:nth-of-type(5n+1) {
            .svg-inline--fa {
                background-color: $rl-blue;
            }
        }
        &:nth-of-type(5n+2) {
            .svg-inline--fa {
                background-color: $rl-teal;
            }
        }
        &:nth-of-type(5n+3) {
            .svg-inline--fa {
                background-color: $rl-orange;
            }
        }
        &:nth-of-type(5n+4) {
            .svg-inline--fa {
                background-color: $rl-purple;
            }
        }
        &:nth-of-type(5n+5) {
            .svg-inline--fa {
                background-color: $rl-yellow;
            }
        }
        // Force orange on first 4
        &:nth-of-type(1),
        &:nth-of-type(2),
        &:nth-of-type(3),
        &:nth-of-type(4) {
            .svg-inline--fa {
                background-color: $rl-orange;
            }
        }

        // Arrows.
        .rl-process-arrow {
            transform: translate(98px,8px) rotate(-55deg);
        }
        &:nth-of-type(3),
        &:nth-of-type(7) {
            .rl-process-arrow {
                transform: scaleX(-1) translate(-165px,20px) rotate(-55deg);
            }
        }
        &:nth-of-type(4),
        &:nth-of-type(8) {
            .rl-process-arrow {
                transform: translate(-75px,-72px) rotate(40deg);
            }
        }
    }


    //V3 stuff
    .rl-process-v2 & {
        .rl-process-icons img {
            width: 100%;
            height: 100%;
            margin-right: 2rem;
        }
        .rl-process-text {
            padding-left: 1.5rem;
        }
        // Arrows.
        .rl-process-arrow {
            transform: translate(132px,-5px) rotate(-55deg);
        }
        &:nth-of-type(3),
        &:nth-of-type(7) {
            .rl-process-arrow {
                transform: scaleX(-1) translate(-215px,-8px) rotate(-55deg);
            }
        }
        &:nth-of-type(4),
        &:nth-of-type(8) {
            .rl-process-arrow {
                transform: translate(-88px,-100px) rotate(40deg);
            }
        }
    }
}